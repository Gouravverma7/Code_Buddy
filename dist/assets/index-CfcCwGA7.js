(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function t(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(s){if(s.ep)return;s.ep=!0;const o=t(s);fetch(s.href,o)}})();console.log("Loading CodeBuddy.ai Enhanced...");class c{constructor(){this.editor=null,this.socket=null,this.sessionId=null,this.isConnected=!1,this.currentUser={id:"user-"+Math.random().toString(36).substr(2,9),name:"You",avatar:"Y"},this.fileSystem=new Map,this.openTabs=new Map,this.currentFile="src/Main.java",this.collaborators=new Map,this.aiMessages=[],this.peer=null,this.localStream=null,this.remoteStreams=new Map,this.isInCall=!1,this.editorInitialized=!1,this.isResizing=!1,this.resizeType=null,this.startX=0,this.startY=0,this.startWidth=0,this.startHeight=0,console.log("CodeBuddy.ai constructor called"),this.init()}async init(){console.log("Initializing CodeBuddy.ai Enhanced...");try{this.initializeFileSystem(),this.setupEventListeners(),await this.initializeEditor(),this.loadSampleCode(),this.setupWebRTC(),this.setupResizableHandles(),this.addWelcomeMessage(),console.log("CodeBuddy.ai Enhanced initialized successfully!")}catch(e){console.error("Error initializing CodeBuddy.ai:",e)}}setupEventListeners(){console.log("Setting up event listeners..."),document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{this.attachEventListeners()}):this.attachEventListeners()}attachEventListeners(){console.log("Attaching event listeners to DOM elements..."),this.addEventListenerSafe("connectBtn","click",()=>{console.log("Connect button clicked"),this.connect()}),this.addEventListenerSafe("disconnectBtn","click",()=>{console.log("Disconnect button clicked"),this.disconnect()}),this.addEventListenerSafe("aiChatBtn","click",()=>{console.log("AI Chat button clicked"),this.openAiChat()}),this.addEventListenerSafe("closeAiChat","click",()=>this.closeAiChat()),this.addEventListenerSafe("sendAiMessage","click",()=>this.sendAiMessage());const e=document.getElementById("aiInput");e&&e.addEventListener("keypress",i=>{i.key==="Enter"&&!i.shiftKey&&(i.preventDefault(),this.sendAiMessage())}),this.addEventListenerSafe("clearTerminal","click",()=>{console.log("Clear terminal clicked"),this.clearTerminal()}),this.addEventListenerSafe("minimizeTerminal","click",()=>{console.log("Minimize terminal clicked"),this.minimizeTerminal()}),this.addEventListenerSafe("runCodeBtn","click",()=>{console.log("Run Code button clicked"),this.runCode()}),this.addEventListenerSafe("newFileBtn","click",()=>{console.log("New File button clicked"),this.createNewFile()}),this.addEventListenerSafe("newFolderBtn","click",()=>{console.log("New Folder button clicked"),this.createNewFolder()}),this.addEventListenerSafe("refreshBtn","click",()=>{console.log("Refresh button clicked"),this.refreshFileTree()}),this.addEventListenerSafe("sendBtn","click",()=>{console.log("Send message button clicked"),this.sendMessage()});const t=document.getElementById("messageInput");t&&t.addEventListener("keypress",i=>{i.key==="Enter"&&!i.shiftKey&&(i.preventDefault(),this.sendMessage())}),this.addEventListenerSafe("videoCallBtn","click",()=>{console.log("Video call button clicked"),this.startVideoCall()}),this.addEventListenerSafe("audioCallBtn","click",()=>{console.log("Audio call button clicked"),this.startAudioCall()}),this.addEventListenerSafe("addCollaboratorBtn","click",()=>{console.log("Add collaborator button clicked"),this.openAddCollaboratorModal()}),this.addEventListenerSafe("cancelAddCollaborator","click",()=>this.closeAddCollaboratorModal()),this.addEventListenerSafe("confirmAddCollaborator","click",()=>this.addCollaborator()),this.setupFileTreeListeners(),this.addEventListenerSafe("githubExport","click",()=>{console.log("GitHub export button clicked"),this.exportToGitHub()}),this.addEventListenerSafe("saveBtn","click",()=>{console.log("Save button clicked"),this.saveSession()}),document.addEventListener("keydown",i=>this.handleKeyboardShortcuts(i)),console.log("All event listeners attached successfully")}addEventListenerSafe(e,t,i){const s=document.getElementById(e);s?(s.addEventListener(t,i),console.log(`✅ Event listener added for ${e}`)):console.warn(`❌ Element ${e} not found`)}setupResizableHandles(){console.log("Setting up resizable handles...");const e=document.getElementById("leftResizeHandle");e&&e.addEventListener("mousedown",s=>this.startResize(s,"left"));const t=document.getElementById("rightResizeHandle");t&&t.addEventListener("mousedown",s=>this.startResize(s,"right"));const i=document.getElementById("terminalResizeHandle");i&&i.addEventListener("mousedown",s=>this.startResize(s,"terminal")),document.addEventListener("mousemove",s=>this.handleResize(s)),document.addEventListener("mouseup",()=>this.stopResize()),console.log("Resizable handles setup complete")}startResize(e,t){console.log("Starting resize:",t),e.preventDefault(),this.isResizing=!0,this.resizeType=t,this.startX=e.clientX,this.startY=e.clientY;const i=document.getElementById("fileExplorer"),s=document.getElementById("chatPanel"),o=document.getElementById("terminalPanel");t==="left"&&i?this.startWidth=i.offsetWidth:t==="right"&&s?this.startWidth=s.offsetWidth:t==="terminal"&&o&&(this.startHeight=o.offsetHeight),document.body.classList.add("resizing"),document.body.style.cursor=t==="terminal"?"ns-resize":"ew-resize"}handleResize(e){if(!this.isResizing)return;const t=document.getElementById("fileExplorer"),i=document.getElementById("chatPanel"),s=document.getElementById("terminalPanel");if(this.resizeType==="left"&&t){const o=e.clientX-this.startX,n=Math.max(200,Math.min(400,this.startWidth+o));t.style.width=n+"px"}else if(this.resizeType==="right"&&i){const o=this.startX-e.clientX,n=Math.max(250,Math.min(500,this.startWidth+o));i.style.width=n+"px"}else if(this.resizeType==="terminal"&&s){const o=this.startY-e.clientY,n=Math.max(100,Math.min(400,this.startHeight+o));s.style.height=n+"px"}this.editor&&setTimeout(()=>this.editor.layout(),0)}stopResize(){this.isResizing&&(console.log("Stopping resize"),this.isResizing=!1,this.resizeType=null,document.body.classList.remove("resizing"),document.body.style.cursor="",this.editor&&setTimeout(()=>this.editor.layout(),100))}async initializeEditor(){if(console.log("Initializing Monaco Editor..."),this.editorInitialized){console.log("Editor already initialized");return}return new Promise((e,t)=>{if(window.monaco){console.log("Monaco already available"),this.createEditor(),e();return}if(typeof require<"u"){console.log("Using existing require"),require.config({paths:{vs:"https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.45.0/min/vs"}}),require(["vs/editor/editor.main"],()=>{console.log("Monaco editor main loaded via existing require"),this.createEditor(),e()});return}const i=document.createElement("script");i.src="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.45.0/min/vs/loader.min.js",i.onload=()=>{console.log("Monaco loader loaded"),require.config({paths:{vs:"https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.45.0/min/vs"}}),require(["vs/editor/editor.main"],()=>{console.log("Monaco editor main loaded"),this.createEditor(),e()})},i.onerror=s=>{console.error("Failed to load Monaco Editor:",s),t(s)},document.querySelector('script[src*="monaco-editor"]')||document.head.appendChild(i)})}createEditor(){const e=document.getElementById("editor");if(!e){console.error("Editor element not found");return}this.editor&&(console.log("Disposing existing editor"),this.editor.dispose(),this.editor=null),e.innerHTML="";try{console.log("Creating new Monaco editor instance"),this.editor=monaco.editor.create(e,{value:"",language:"java",theme:"vs-dark",fontSize:14,fontFamily:'Monaco, Menlo, "Ubuntu Mono", monospace',minimap:{enabled:!0},scrollBeyondLastLine:!1,automaticLayout:!0,lineNumbers:"on",roundedSelection:!1,scrollbar:{vertical:"visible",horizontal:"visible"},wordWrap:"on",contextmenu:!0,mouseWheelZoom:!0,smoothScrolling:!0,cursorBlinking:"smooth",renderWhitespace:"selection"}),this.editor.onDidChangeModelContent(t=>{this.isConnected&&this.socket&&this.sendCodeChange(),this.saveFileContent()}),this.editor.onDidChangeCursorPosition(t=>{this.isConnected&&this.socket&&this.sendCursorPosition(t.position)}),this.editorInitialized=!0,console.log("Monaco Editor created successfully")}catch(t){console.error("Error creating Monaco Editor:",t),this.editorInitialized=!1}}setupFileTreeListeners(){const e=document.getElementById("fileTree");e&&e.addEventListener("click",t=>{const i=t.target.closest(".tree-item");if(!i)return;const s=t.target.closest(".item-action");if(s){t.stopPropagation(),this.handleFileAction(s,i);return}i.classList.contains("file")?(console.log("File clicked:",i.dataset.path),this.openFile(i.dataset.path)):i.classList.contains("folder")&&(console.log("Folder clicked:",i.dataset.path),this.toggleFolder(i))})}handleFileAction(e,t){const i=e.title.toLowerCase(),s=t.dataset.path;switch(console.log("File action:",i,"on",s),i){case"add file":this.createNewFile(s);break;case"rename":this.renameItem(s);break;case"delete":this.deleteItem(s);break}}initializeFileSystem(){this.fileSystem.set("src/",{type:"folder",children:["src/Main.java","src/Utils.java"]}),this.fileSystem.set("src/Main.java",{type:"file",content:"",language:"java"}),this.fileSystem.set("src/Utils.java",{type:"file",content:"",language:"java"}),this.fileSystem.set("README.md",{type:"file",content:"",language:"markdown"}),console.log("File system initialized")}loadSampleCode(){const e=`package com.codebuddy.example;

public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Welcome to CodeBuddy.ai Enhanced!");
        
        // Example: Simple calculator
        int a = 10;
        int b = 5;
        
        System.out.println("Addition: " + (a + b));
        System.out.println("Subtraction: " + (a - b));
        System.out.println("Multiplication: " + (a * b));
        System.out.println("Division: " + (a / b));
        
        // Example: Array processing
        int[] numbers = {1, 2, 3, 4, 5};
        int sum = 0;
        
        for (int num : numbers) {
            sum += num;
        }
        
        System.out.println("Sum of array: " + sum);
        System.out.println("Average: " + (sum / numbers.length));
        
        // Example: String manipulation
        String message = "CodeBuddy.ai is awesome!";
        System.out.println("Message: " + message);
        System.out.println("Length: " + message.length());
        System.out.println("Uppercase: " + message.toUpperCase());
    }
}`;this.fileSystem.set("src/Main.java",{type:"file",content:e,language:"java"}),this.editor&&this.editor.setValue(e),console.log("Sample code loaded")}addWelcomeMessage(){this.addTerminalOutput("🚀 Welcome to CodeBuddy.ai Enhanced Terminal!","success"),this.addTerminalOutput("💡 Features: Resizable panels, real-time collaboration, AI assistance","info"),this.addTerminalOutput("⚡ Ready to execute Java, Python, JavaScript, and C++ code","info"),this.addTerminalOutput('📝 Use Ctrl+R or click "Run" to execute your program',"info"),this.addTerminalOutput("─".repeat(60),"info")}clearTerminal(){console.log("clearTerminal called");const e=document.getElementById("terminalOutput");e&&(e.innerHTML="",this.addTerminalOutput("Terminal cleared.","info"),console.log("Terminal cleared"))}minimizeTerminal(){console.log("minimizeTerminal called");const e=document.getElementById("terminalPanel");e&&(e.offsetHeight>50?(e.style.height="35px",this.addTerminalOutput("Terminal minimized. Click to restore.","info")):(e.style.height="200px",this.addTerminalOutput("Terminal restored.","info")),this.editor&&setTimeout(()=>this.editor.layout(),100))}addTerminalOutput(e,t="info"){const i=document.getElementById("terminalOutput");if(i){const s=document.createElement("div");s.className=`output-line ${t}`;const o=new Date().toLocaleTimeString();s.textContent=`[${o}] ${e}`,i.appendChild(s),i.scrollTop=i.scrollHeight,console.log("Added terminal output:",e,t)}else console.error("Terminal output element not found")}async runCode(){if(console.log("runCode called - Enhanced version with terminal"),!this.editor||!this.editorInitialized){console.error("Editor not ready"),this.showNotification("Editor not ready. Please wait for initialization.","warning");return}const e=this.editor.getValue();if(!e.trim()){console.log("No code to execute"),this.showNotification("No code to execute","warning"),this.addTerminalOutput("❌ No code to execute","error");return}console.log("Code to execute:",e.substring(0,100)+"...");const t=this.fileSystem.get(this.currentFile),i=t?t.language:"java",s=this.currentFile?this.currentFile.split("/").pop().split(".")[0]:"Main";console.log("Executing with language:",i,"filename:",s),this.addTerminalOutput(`▶ Executing ${i} code (${s})...`,"info"),this.addTerminalOutput("─".repeat(60),"info");try{console.log("Making API request to /api/code/execute");const o=await fetch("/api/code/execute",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:e,language:i,filename:s})});if(console.log("API response status:",o.status),!o.ok)throw new Error(`HTTP error! status: ${o.status}`);const n=await o.json();console.log("API response result:",n),n.success?(n.output&&n.output.trim()?(this.addTerminalOutput("📤 Program Output:","info"),n.output.split(`
`).forEach(a=>{a.trim()&&this.addTerminalOutput(a,"success")})):this.addTerminalOutput("✅ Program executed successfully (no output)","success"),n.error&&n.error.trim()&&(this.addTerminalOutput("⚠️ Warnings/Errors:","warning"),n.error.split(`
`).forEach(a=>{a.trim()&&this.addTerminalOutput(a,"warning")})),this.addTerminalOutput(`⏱️ Execution completed in ${n.executionTime}ms`,"info"),this.showNotification("Code executed successfully!","success")):(this.addTerminalOutput("❌ Execution failed:","error"),this.addTerminalOutput(n.error||"Unknown error","error"),this.showNotification("Code execution failed","error"))}catch(o){console.error("Code execution error:",o),this.addTerminalOutput("🔌 Network/Connection Error:","error"),this.addTerminalOutput(o.message,"error"),this.addTerminalOutput("Please check if the server is running on port 3000","error"),this.showNotification(`Execution error: ${o.message}`,"error")}this.addTerminalOutput("─".repeat(60),"info")}createNewFile(e=""){const t=prompt("Enter file name:");if(!t)return;const i=e?`${e}/${t}`:t,s=this.getLanguageFromExtension(t);this.fileSystem.set(i,{type:"file",content:"",language:s}),this.refreshFileTree(),this.openFile(i),this.showNotification(`Created file: ${t}`,"success"),this.addTerminalOutput(`📄 Created new file: ${t}`,"info")}createNewFolder(){const e=prompt("Enter folder name:");e&&(this.fileSystem.set(`${e}/`,{type:"folder",children:[]}),this.refreshFileTree(),this.showNotification(`Created folder: ${e}`,"success"),this.addTerminalOutput(`📁 Created new folder: ${e}`,"info"))}renameItem(e){const t=e.split("/").pop(),i=prompt("Enter new name:",t);if(!i||i===t)return;const s=e.substring(0,e.lastIndexOf("/")),o=s?`${s}/${i}`:i,n=this.fileSystem.get(e);this.fileSystem.delete(e),this.fileSystem.set(o,n),this.refreshFileTree(),this.showNotification(`Renamed to: ${i}`,"success"),this.addTerminalOutput(`✏️ Renamed ${t} to ${i}`,"info")}deleteItem(e){confirm(`Are you sure you want to delete ${e}?`)&&(this.fileSystem.delete(e),this.openTabs.has(e)&&this.closeTab(e),this.refreshFileTree(),this.showNotification(`Deleted: ${e}`,"success"),this.addTerminalOutput(`🗑️ Deleted: ${e}`,"warning"))}openFile(e){console.log("Opening file:",e);const t=this.fileSystem.get(e);!t||t.type!=="file"||(this.openTabs.has(e)||(this.openTabs.set(e,t),this.addFileTab(e)),this.currentFile=e,this.editor&&(this.editor.setValue(t.content),this.setEditorLanguage(t.language)),this.updateActiveTab(e),this.updateActiveFileInTree(e),this.addTerminalOutput(`📂 Opened file: ${e}`,"info"))}saveFileContent(){if(this.currentFile&&this.fileSystem.has(this.currentFile)&&this.editor){const e=this.fileSystem.get(this.currentFile);e.content=this.editor.getValue()}}addFileTab(e){const t=e.split("/").pop(),i=this.getFileIcon(t),s=document.getElementById("fileTabs");if(!s)return;const o=document.createElement("div");o.className="file-tab",o.dataset.file=e,o.innerHTML=`
            <i class="${i}"></i>
            <span>${t}</span>
            <button class="tab-close">
                <i class="fas fa-times"></i>
            </button>
        `,o.addEventListener("click",n=>{n.target.closest(".tab-close")?this.closeTab(e):this.openFile(e)}),s.appendChild(o)}closeTab(e){this.openTabs.delete(e);const t=document.querySelector(`[data-file="${e}"]`);if(t&&t.remove(),this.currentFile===e){const i=Array.from(this.openTabs.keys());i.length>0?this.openFile(i[0]):(this.editor&&this.editor.setValue(""),this.currentFile=null)}}updateActiveTab(e){document.querySelectorAll(".file-tab").forEach(t=>{t.classList.toggle("active",t.dataset.file===e)})}updateActiveFileInTree(e){document.querySelectorAll(".tree-item").forEach(t=>{t.classList.toggle("active",t.dataset.path===e)})}refreshFileTree(){const e=document.getElementById("fileTree");if(!e)return;e.innerHTML="",Array.from(this.fileSystem.entries()).sort((i,s)=>{const[o,n]=i,[a,r]=s;return n.type==="folder"&&r.type==="file"?-1:n.type==="file"&&r.type==="folder"?1:o.localeCompare(a)}).forEach(([i,s])=>{const o=this.createTreeItem(i,s);e.appendChild(o)})}createTreeItem(e,t){const i=document.createElement("div");i.className=`tree-item ${t.type}`,i.dataset.path=e;const s=e.split("/").pop()||e,o=t.type==="folder"?"fas fa-folder folder-icon":this.getFileIcon(s);return i.innerHTML=`
            <i class="tree-icon ${o}"></i>
            <span>${s}</span>
            <div class="tree-item-actions">
                ${t.type==="folder"?'<button class="item-action" title="Add File"><i class="fas fa-plus"></i></button>':""}
                <button class="item-action" title="Rename"><i class="fas fa-edit"></i></button>
                <button class="item-action" title="Delete"><i class="fas fa-trash"></i></button>
            </div>
        `,i}getFileIcon(e){const t=e.split(".").pop().toLowerCase();return{java:"fab fa-java file-icon",js:"fab fa-js file-icon",ts:"fab fa-js file-icon",py:"fab fa-python file-icon",html:"fab fa-html5 file-icon",css:"fab fa-css3 file-icon",md:"fab fa-markdown file-icon",json:"fas fa-code file-icon",xml:"fas fa-code file-icon",cpp:"fas fa-code file-icon",c:"fas fa-code file-icon"}[t]||"fas fa-file file-icon"}getLanguageFromExtension(e){const t=e.split(".").pop().toLowerCase();return{java:"java",js:"javascript",ts:"typescript",py:"python",html:"html",css:"css",md:"markdown",json:"json",xml:"xml",cpp:"cpp",c:"c"}[t]||"plaintext"}setEditorLanguage(e){if(this.editor&&window.monaco){const t=this.editor.getModel();monaco.editor.setModelLanguage(t,e)}}openAiChat(){console.log("Opening AI Chat");const e=document.getElementById("aiChatModal");e&&e.classList.add("active")}closeAiChat(){const e=document.getElementById("aiChatModal");e&&e.classList.remove("active")}async sendAiMessage(){const e=document.getElementById("aiInput");if(!e)return;const t=e.value.trim();if(!t)return;console.log("Sending AI message:",t),this.addAiMessage("user",t),e.value="";const i=this.addAiMessage("assistant","Thinking...",!0);try{const s=this.editor?this.editor.getValue():"",o=s?`Current code:
\`\`\`${this.getCurrentLanguage()}
${s}
\`\`\``:"",n=await this.callAI(t,o);this.removeAiMessage(i),this.addAiMessage("assistant",n)}catch(s){this.removeAiMessage(i),this.addAiMessage("assistant",`Sorry, I encountered an error: ${s.message}`)}}async callAI(e,t=""){const i=await fetch("/api/ai/chat",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:e,context:t,sessionId:this.sessionId,userId:this.currentUser.id})});if(!i.ok)throw new Error(`HTTP error! status: ${i.status}`);return(await i.json()).response}addAiMessage(e,t,i=!1){const s=document.getElementById("aiChatMessages");if(!s)return;const o=document.createElement("div"),n="msg-"+Date.now();o.id=n,o.className=`ai-message ${e} fade-in`;const a=e==="user"?"fas fa-user":"fas fa-robot",r=e==="user"?"You":"AI Assistant";return o.innerHTML=`
            <div class="ai-message-header">
                <i class="${a}"></i>
                <span class="ai-message-role ${e}">${r}</span>
            </div>
            <div class="ai-message-content">${i?this.getLoadingHTML():this.formatAiContent(t)}</div>
        `,s.appendChild(o),s.scrollTop=s.scrollHeight,n}removeAiMessage(e){const t=document.getElementById(e);t&&t.remove()}formatAiContent(e){return e.replace(/```(\w+)?\n([\s\S]*?)```/g,"<pre><code>$2</code></pre>").replace(/`([^`]+)`/g,"<code>$1</code>").replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>").replace(/\n/g,"<br>")}getLoadingHTML(){return`
            <div class="loading">
                <div class="loading-dots">
                    <div class="loading-dot"></div>
                    <div class="loading-dot"></div>
                    <div class="loading-dot"></div>
                </div>
                <span style="margin-left: 12px;">Thinking...</span>
            </div>
        `}getCurrentLanguage(){if(!this.currentFile)return"plaintext";const e=this.fileSystem.get(this.currentFile);return e?e.language:"plaintext"}setupWebRTC(){this.checkWebRTCSupport()}checkWebRTCSupport(){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia){console.warn("WebRTC not supported in this browser");const e=document.getElementById("videoCallBtn"),t=document.getElementById("audioCallBtn");e&&(e.disabled=!0),t&&(t.disabled=!0)}}async startVideoCall(){if(this.isInCall){this.showNotification("Already in a call","warning");return}try{this.localStream=await navigator.mediaDevices.getUserMedia({video:!0,audio:!0}),this.isInCall=!0,this.updateCallButtons(),this.showNotification("Video call started","success"),this.addTerminalOutput("📹 Video call started","info"),this.socket&&this.socket.emit("call-start",{sessionId:this.sessionId,userId:this.currentUser.id,type:"video"})}catch(e){console.error("Error starting video call:",e),this.showNotification("Failed to start video call","error"),this.addTerminalOutput("❌ Failed to start video call","error")}}async startAudioCall(){if(this.isInCall){this.showNotification("Already in a call","warning");return}try{this.localStream=await navigator.mediaDevices.getUserMedia({video:!1,audio:!0}),this.isInCall=!0,this.updateCallButtons(),this.showNotification("Audio call started","success"),this.addTerminalOutput("🎤 Audio call started","info"),this.socket&&this.socket.emit("call-start",{sessionId:this.sessionId,userId:this.currentUser.id,type:"audio"})}catch(e){console.error("Error starting audio call:",e),this.showNotification("Failed to start audio call","error"),this.addTerminalOutput("❌ Failed to start audio call","error")}}updateCallButtons(){const e=document.getElementById("videoCallBtn"),t=document.getElementById("audioCallBtn");e&&e.classList.toggle("active",this.isInCall),t&&t.classList.toggle("active",this.isInCall)}openAddCollaboratorModal(){const e=document.getElementById("addCollaboratorModal");e&&e.classList.add("active")}closeAddCollaboratorModal(){const e=document.getElementById("addCollaboratorModal");e&&e.classList.remove("active");const t=document.getElementById("collaboratorId"),i=document.getElementById("permissionLevel");t&&(t.value=""),i&&(i.value="edit")}async addCollaborator(){const e=document.getElementById("collaboratorId"),t=document.getElementById("permissionLevel");if(!e||!t)return;const i=e.value.trim(),s=t.value;if(!i){this.showNotification("Please enter a collaborator ID","warning");return}try{const o=await fetch("/api/collaborators/add",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({sessionId:this.sessionId,collaboratorId:i,permissionLevel:s})});if(o.ok){const n=await o.json();this.showNotification(n.message,"success"),this.addTerminalOutput(`👥 Added collaborator: ${i}`,"info"),this.closeAddCollaboratorModal(),this.updateCollaboratorsList()}else{const n=await o.json();this.showNotification(`Failed to add collaborator: ${n.error}`,"error")}}catch(o){this.showNotification(`Error adding collaborator: ${o.message}`,"error")}}updateCollaboratorsList(){}connect(){const e=document.getElementById("sessionId");if(e){if(this.sessionId=e.value.trim(),!this.sessionId){this.showNotification("Please enter a session ID","error");return}console.log("Connecting to session:",this.sessionId);try{if(typeof io>"u"){console.error("Socket.IO not loaded"),this.showNotification("Socket.IO not available","error");return}this.socket=io(),this.socket.on("connect",()=>{console.log("Socket connected"),this.socket.emit("join-session",{sessionId:this.sessionId,userId:this.currentUser.id,username:this.currentUser.name})}),this.socket.on("session-joined",t=>{console.log("Session joined:",t),this.isConnected=!0,this.updateConnectionStatus(!0,"Connected"),this.showNotification(`Connected to session: ${this.sessionId}`,"success"),this.addTerminalOutput(`🔗 Connected to session: ${this.sessionId}`,"success")}),this.socket.on("user-joined",t=>{this.addChatMessage("System",`${t.username} joined the session`,new Date,!1,"system"),this.addTerminalOutput(`👋 ${t.username} joined the session`,"info")}),this.socket.on("user-left",t=>{this.addChatMessage("System",`${t.username} left the session`,new Date,!1,"system"),this.addTerminalOutput(`👋 ${t.username} left the session`,"warning")}),this.socket.on("code-change",t=>{t.userId!==this.currentUser.id&&this.handleRemoteCodeChange(t)}),this.socket.on("chat-message",t=>{t.userId!==this.currentUser.id&&this.addChatMessage(t.username,t.message,new Date(t.timestamp),!1)}),this.socket.on("disconnect",()=>{console.log("Socket disconnected"),this.isConnected=!1,this.updateConnectionStatus(!1,"Disconnected"),this.showNotification("Disconnected from session","warning"),this.addTerminalOutput("🔌 Disconnected from session","warning")})}catch(t){console.error("Connection error:",t),this.showNotification("Failed to connect to session","error")}}}disconnect(){this.socket&&(this.socket.disconnect(),this.socket=null),this.isConnected=!1,this.updateConnectionStatus(!1,"Disconnected"),this.showNotification("Disconnected from session","info"),this.addTerminalOutput("🔌 Manually disconnected from session","info")}updateConnectionStatus(e,t){const i=document.getElementById("connectionStatus"),s=document.getElementById("statusText");i&&(i.className=`connection-status ${e?"connected":"disconnected"}`),s&&(s.textContent=t);const o=document.getElementById("connectBtn"),n=document.getElementById("disconnectBtn"),a=document.getElementById("sessionId");o&&(o.disabled=e),n&&(n.disabled=!e),a&&(a.disabled=e)}sendCodeChange(){!this.isConnected||!this.socket||!this.editor||this.socket.emit("code-change",{sessionId:this.sessionId,userId:this.currentUser.id,filename:this.currentFile,content:this.editor.getValue(),timestamp:Date.now()})}sendCursorPosition(e){!this.isConnected||!this.socket||this.socket.emit("cursor-position",{sessionId:this.sessionId,userId:this.currentUser.id,position:e,timestamp:Date.now()})}handleRemoteCodeChange(e){if(e.filename===this.currentFile&&this.editor){const t=this.editor.getPosition();this.editor.setValue(e.content),this.editor.setPosition(t)}if(this.fileSystem.has(e.filename)){const t=this.fileSystem.get(e.filename);t.content=e.content}}sendMessage(){const e=document.getElementById("messageInput");if(!e)return;const t=e.value.trim();t&&(console.log("Sending message:",t),this.addChatMessage(this.currentUser.name,t,new Date,!0),e.value="",this.isConnected&&this.socket&&this.socket.emit("chat-message",{sessionId:this.sessionId,userId:this.currentUser.id,username:this.currentUser.name,message:t,timestamp:Date.now()}))}addChatMessage(e,t,i,s,o="user"){const n=document.getElementById("chatMessages");if(!n)return;const a=document.createElement("div");a.className=`message fade-in ${s?"own":""}`,o==="system"&&(a.style.background="rgba(78, 205, 196, 0.2)",a.style.border="1px solid rgba(78, 205, 196, 0.3)");const r=i.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit",hour12:!0});a.innerHTML=`
            <div class="message-header">
                <span class="message-username">${e}</span>
                <span class="message-time">${r}</span>
            </div>
            <div class="message-content">${t}</div>
        `,n.appendChild(a),n.scrollTop=n.scrollHeight}handleKeyboardShortcuts(e){if(e.ctrlKey||e.metaKey)switch(e.key){case"s":e.preventDefault(),this.saveSession();break;case"n":e.preventDefault(),this.createNewFile();break;case"r":e.preventDefault(),this.runCode();break;case"`":e.preventDefault(),this.minimizeTerminal();break}}saveSession(){this.saveFileContent(),this.showNotification("Session saved successfully!","success"),this.addTerminalOutput("💾 Session saved successfully","success")}async exportToGitHub(){if(!this.sessionId){this.showNotification("Please connect to a session first","warning");return}const e=prompt("Enter GitHub repository name:");if(!e)return;const t=prompt("Enter your GitHub access token:");if(t){this.addTerminalOutput(`📤 Exporting to GitHub repository: ${e}`,"info");try{const i=await fetch("/api/github/export",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({sessionId:this.sessionId,repoName:e,accessToken:t,files:Object.fromEntries(Array.from(this.fileSystem.entries()).filter(([o,n])=>n.type==="file").map(([o,n])=>[o,n.content]))})}),s=await i.json();i.ok?(this.showNotification(`Successfully exported to GitHub: ${s.url}`,"success"),this.addTerminalOutput(`✅ Successfully exported to GitHub: ${s.url}`,"success")):(this.showNotification(`Export failed: ${s.error}`,"error"),this.addTerminalOutput(`❌ Export failed: ${s.error}`,"error"))}catch(i){this.showNotification(`Export failed: ${i.message}`,"error"),this.addTerminalOutput(`❌ Export failed: ${i.message}`,"error")}}}showNotification(e,t="info"){console.log("Notification:",t,e);const i=document.createElement("div");i.className=`notification notification-${t}`,i.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 16px 20px;
            border-radius: 12px;
            color: white;
            font-weight: 600;
            z-index: 10000;
            max-width: 400px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(20px);
            transform: translateX(100%);
            transition: transform 0.3s ease;
        `;const s={success:"linear-gradient(45deg, #4caf50, #45a049)",error:"linear-gradient(45deg, #f44336, #d32f2f)",warning:"linear-gradient(45deg, #ff9800, #f57c00)",info:"linear-gradient(45deg, #2196f3, #1976d2)"};i.style.background=s[t]||s.info,i.textContent=e,document.body.appendChild(i),setTimeout(()=>{i.style.transform="translateX(0)"},100),setTimeout(()=>{i.style.transform="translateX(100%)",setTimeout(()=>{document.body.contains(i)&&document.body.removeChild(i)},300)},4e3)}}console.log("Setting up DOMContentLoaded listener...");document.addEventListener("DOMContentLoaded",()=>{console.log("DOM loaded, initializing CodeBuddy.ai Enhanced...");try{window.codeBuddyApp=new c,console.log("✅ CodeBuddy.ai Enhanced initialized successfully!")}catch(l){console.error("❌ Failed to initialize CodeBuddy.ai:",l)}});if(document.readyState==="loading")console.log("DOM still loading, waiting for DOMContentLoaded...");else{console.log("DOM already loaded, initializing immediately...");try{window.codeBuddyApp=new c,console.log("✅ CodeBuddy.ai Enhanced initialized successfully!")}catch(l){console.error("❌ Failed to initialize CodeBuddy.ai:",l)}}
//# sourceMappingURL=index-CfcCwGA7.js.map
